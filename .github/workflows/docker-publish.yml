name: Docker Build and Test

# Separate triggers for different events
on:
  # PR events only trigger tests
  pull_request:
    branches: [ "main" ]
  # Push to main only triggers publish
  push:
    branches: [ "main" ]

# Add permissions block
permissions:
  contents: read
  packages: write

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Test job only runs on PRs
  test:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug

      # Set up build cache
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Create test env file
        run: |
          cat << EOF > .env
          SECRET_KEY="test-key-not-for-production"
          OWM_API_KEY="test-key"
          FLASK_DEBUG=0
          FLASK_ENV=testing
          PORT=5001
          POSTGRES_USER=db
          POSTGRES_PASSWORD=testing123
          POSTGRES_DB=frontend_db
          DATABASE_URL=postgresql://db:testing123@db:5432/frontend_db
          ALPHA_VANTAGE_API_KEY="test-key"
          GNEWS_API_KEY="test-key"
          TARGETARCH=amd64
          POSTGRES_HOST_AUTH_METHOD=scram-sha-256
          POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
          POSTGRES_PASSWORD_ENCRYPTION=scram-sha-256
          EOF

      - name: Run Docker tests
        run: |
          chmod +x test-docker-build.sh
          ./test-docker-build.sh

  # Publish job only runs on push to main
  publish:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug

      # Set up build cache
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log into Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./dockerfile
          platforms: linux/amd64
          push: true
          tags: dawttu00/dawttu_private:frontend
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          build-args: |
            BUILDPLATFORM=linux/amd64
            TARGETPLATFORM=linux/amd64

      # Move cache
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache