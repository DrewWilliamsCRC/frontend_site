ARG PYTHON_VERSION=3.10-slim

FROM python:${PYTHON_VERSION} as builder

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PATH="/usr/local/bin:$PATH"

# Create and set working directory
WORKDIR /build

# Install build dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    make \
    libpq-dev \
    python3-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Python tools first
RUN pip install --upgrade pip setuptools wheel

# Copy requirements and install dependencies
COPY requirements-frontend.txt ./requirements.txt
COPY build-helpers/ ./build-helpers/
RUN pip install --no-cache-dir -r requirements.txt

# Final stage - runtime
FROM python:${PYTHON_VERSION}

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PATH="/usr/local/bin:$PATH"

# Create non-root user
RUN useradd -m -u 1000 appuser && \
    mkdir -p /build && \
    chown -R appuser:appuser /build

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    postgresql-client \
    curl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Copy application code and dependencies
COPY --from=builder /usr/local/lib/python3.10/site-packages /usr/local/lib/python3.10/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin
COPY --chown=appuser:appuser . /build

# Set working directory
WORKDIR /build

# Copy entrypoint script
COPY --chown=appuser:appuser frontend_entrypoint.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/frontend_entrypoint.sh

# Switch to non-root user
USER appuser

# Set entrypoint
ENTRYPOINT ["/usr/local/bin/frontend_entrypoint.sh"]
CMD ["gunicorn", "--bind", "0.0.0.0:5001", "--workers", "4", "app:app"] 